{"mappings":";;;;;AAIA,eAAe;IACb,IAAI;QACF,MAAM,cAAc,CAAA,GAAA,2BAAO,EAAE;QAC7B,MAAM,KAAK,KAAK,MAAM,KAAK;QAC3B,MAAM,KAAK,KAAK,MAAM,KAAK;QAE3B,MAAM,MAAM,KAAK;QAEjB,kCAAkC;QAClC,CAAA,GAAA,uBAAG,EAAE,CAAC,sBAAsB,EAAE,aAAa;QAC3C,IAAI,OAAO,CAAA,GAAA,kBAAO,EAAE,aAAa;QAEjC,6BAA6B;QAC7B,OAAO,KAAK,OAAO,CAAC,qBAAqB,GAAG,IAAI;QAChD,OAAO,KAAK,OAAO,CAAC,qBAAqB,GAAG,IAAI;QAChD,MAAM,SAAS,KAAK,OAAO,CAAC,mBAAmB,GAAG,KAAK,GAAG,uBAAuB;QAEjF,oCAAoC;QACpC,CAAA,GAAA,mBAAQ,EAAE,aAAa,QAAQ;QAC/B,CAAA,GAAA,uBAAG,EAAE;IACP,EAAE,OAAO,GAAG;QACV,CAAA,GAAA,4BAAQ,EAAE,EAAE,OAAO;IACrB;AACF;AAEA","sources":["index.js"],"sourcesContent":["import { getInput, info, setFailed } from \"@actions/core\";\r\n// const github = require(\"@actions/github\");\r\nimport { readFile, writeFile } from \"fs\";\r\n\r\nasync function run() {\r\n  try {\r\n    const readme_path = getInput(\"readme_path\");\r\n    const v1 = Math.random() * 100;\r\n    const v2 = Math.random() * 100;\r\n\r\n    const sum = v1 + v2;\r\n\r\n    // reads the readme file from path\r\n    info(`Updating README file: ${readme_path}`);\r\n    let data = readFile(readme_path, \"utf8\");\r\n\r\n    // updates the text with data\r\n    data = data.replace(/{{action_val_1}}/g, `${v1}`);\r\n    data = data.replace(/{{action_val_2}}/g, `${v2}`);\r\n    const result = data.replace(/{{action_sum}}/g, `${sum}`); // Use a global replace\r\n\r\n    // writes the updated file to readme\r\n    writeFile(readme_path, result, \"utf8\");\r\n    info(\"README file updated successfully.\");\r\n  } catch (e) {\r\n    setFailed(e.message);\r\n  }\r\n}\r\n\r\nrun();\r\n"],"names":[],"version":3,"file":"main.js.map"}